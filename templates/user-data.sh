#!/usr/bin/env bash
set -e
set -o pipefail

TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
&& curl -H "X-aws-ec2-metadata-token: $TOKEN" -v http://169.254.169.254/latest/user-data

wget https://releases.hashicorp.com/vault-ssh-helper/0.2.0/vault-ssh-helper_0.2.0_linux_amd64.zip
sudo unzip -q vault-ssh-helper_0.2.0_linux_amd64.zip -d /usr/local/bin
sudo chmod 0755 /usr/local/bin/vault-ssh-helper
sudo chown root:root /usr/local/bin/vault-ssh-helper
sudo mkdir /etc/vault-ssh-helper.d/

cat <<EOF > /etc/vault-ssh-helper.d/config.hcl
vault_addr = "https://public-vault-cluster.vault.d46ab3cb-eed2-4a64-b324-51e12e2418eb.aws.hashicorp.cloud:8200"
tls_skip_verify = false
ca_cert = "<PEM_ENCODED_CA_CERT>"
ssh_mount_point = "ssh"
namespace = "my_namespace"
allowed_roles = "*"
EOF

sudo cp /etc/pam.d/sshd /etc/pam.d/sshd.orig

cat <<EOF > /etc/pam.d/sshd
auth requisite pam_exec.so quiet expose_authtok log=/var/log/vault-ssh.log /usr/local/bin/vault-ssh-helper -dev -config=/etc/vault-ssh-helper.d/config.hcl
auth optional pam_unix.so not_set_pass use_first_pass nodelay
EOF

sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.orig

cat <<EOF > /etc/ssh/sshd_config /etc/ssh/sshd_config
ChallengeResponseAuthentication yes
UsePAM yes
PasswordAuthentication no
EOF

sudo systemctl restart sshd

vault-ssh-helper -verify-only -dev -config /etc/vault-ssh-helper.d/config.hcl

REMOTE_HOST_IP="$(ifconfig | grep -A 1 'eth0' | tail -1 | cut -d ':' -f 2 | cut -d ' ' -f 1)"

vault login -method=userpass username=ryan password=training

vault write ssh/creds/otp_key_role ip=$REMOTE_HOST_IP

# set -e
# set -o pipefail

# # get Splunk PW from secrets manager:
# SELF_AZ=$(TOKEN=$(curl -s -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600") \
# && curl -s -H "X-aws-ec2-metadata-token: $TOKEN" -v http://169.254.169.254/latest/meta-data/placement/availability-zone/)
# AWS_REGION=$(echo ${SELF_AZ} | sed 's/[a-z]$//')

# SPLUNK_PASSWORD=$(aws secretsmanager get-secret-value --secret-id splunk_password --query 'SecretString' --output text --region ${AWS_REGION})

# # Change default password
# cat <<EOF > /opt/splunk/etc/system/local/user-seed.conf
# [user_info]
# USERNAME = admin
# PASSWORD = ${SPLUNK_PASSWORD}
# EOF

# /opt/splunk/bin/splunk enable boot-start -systemd-managed 1 --accept-license -user splunk -group splunk

# # boot-start dumps out a broken systemd file, how cute.
# cat <<EOF > /etc/systemd/system/Splunkd.service
# [Unit]
# Description=Systemd service file for Splunk, generated by 'splunk enable boot-start'
# After=network.target

# [Service]
# User=splunk
# Group=splunk
# Type=simple
# Restart=always
# ExecStart=/opt/splunk/bin/splunk _internal_launch_under_systemd
# LimitNOFILE=65536
# SuccessExitStatus=51 52
# RestartPreventExitStatus=51
# RestartForceExitStatus=52
# Delegate=true
# MemoryLimit=100G
# CPUShares=1024

# [Install]
# WantedBy=multi-user.target
# EOF

# systemctl daemon-reload
# systemctl restart Splunkd
# systemctl enable Splunkd

# /opt/splunk/bin/splunk set deploy-poll sal-s-slpkadm01.corp.svbank.com:8089 -auth "admin:${SPLUNK_PASSWORD}"
# /opt/splunk/bin/splunk set servername $(hostname)
